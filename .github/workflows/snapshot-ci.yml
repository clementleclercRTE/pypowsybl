name: Snapshot CI

on:
  push:
    branches:
      - '*'

jobs:
  manylinux_build:
    name: Build linux ${{ matrix.python.name }} wheel
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64:2022-11-01-e47a7a6
    strategy:
      matrix:
        python:
          - {
            name: cp38,
            abi: cp38,
            version: '3.8',
          }

    steps:
      - name: Install Linux packages
        run: yum install -y rh-maven33-maven zlib-devel.x86_64

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: '22.2.0'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout core sources
        uses: actions/checkout@v3
        with:
          repository: powsybl/powsybl-core
          ref: main
          path: powsybl-core

      - name: Build and install core
        shell: bash
        run: |
          . /opt/rh/rh-maven33/enable
          mvn --batch-mode -DskipTests=true --file powsybl-core/pom.xml install
          echo "CORE_MAVEN_PROJECT_VERSION=$(mvn help:evaluate --file powsybl-core/pom.xml -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Checkout olf sources
        uses: actions/checkout@v3
        with:
          repository: powsybl/powsybl-open-loadflow
          ref: main
          path: powsybl-open-loadflow

      - name: Build and install olf
        shell: bash
        run: |
          . /opt/rh/rh-maven33/enable
          mvn --batch-mode -DskipTests=true --file powsybl-open-loadflow/pom.xml install
          echo "OLF_MAVEN_PROJECT_VERSION=$(mvn help:evaluate --file powsybl-open-loadflow/pom.xml -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Checkout sld sources
        uses: actions/checkout@v3
        with:
          repository: powsybl/powsybl-single-line-diagram
          ref: main
          path: powsybl-single-line-diagram

      - name: Build and install sld
        shell: bash
        run: |
          . /opt/rh/rh-maven33/enable
          mvn --batch-mode -DskipTests=true --file powsybl-single-line-diagram/pom.xml install
          echo "SLD_MAVEN_PROJECT_VERSION=$(mvn help:evaluate --file powsybl-single-line-diagram/pom.xml -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Checkout dynawo sources
        uses: actions/checkout@v3
        with:
          repository: powsybl/powsybl-dynawo
          ref: main
          path: powsybl-dynawo

      - name: Build and install dynawo
        shell: bash
        run: |
          . /opt/rh/rh-maven33/enable
          mvn --batch-mode -DskipTests=true --file powsybl-dynawo/pom.xml install
          echo "DYNAWO_MAVEN_PROJECT_VERSION=$(mvn help:evaluate --file powsybl-dynawo/pom.xml -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Checkout entsoe sources
        uses: actions/checkout@v3
        with:
          repository: powsybl/powsybl-entsoe
          ref: main
          path: powsybl-entsoe

      - name: Build and install entsoe
        shell: bash
        run: |
          . /opt/rh/rh-maven33/enable
          mvn --batch-mode -DskipTests=true --file powsybl-entsoe/pom.xml install
          echo "ENTSOE_MAVEN_PROJECT_VERSION=$(mvn help:evaluate --file powsybl-entsoe/pom.xml -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Checkout dependencies sources
        uses: actions/checkout@v3
        with:
          repository: powsybl/powsybl-dependencies
          path: powsybl-dependencies

      - name: Build and install dependencies
        shell: bash
        run: |
          . /opt/rh/rh-maven33/enable
          mvn --file powsybl-dependencies/pom.xml --batch-mode versions:set-property -Dproperty=powsybl-core.version -DnewVersion=${{ env.CORE_MAVEN_PROJECT_VERSION }}
          mvn --file powsybl-dependencies/pom.xml --batch-mode versions:set-property -Dproperty=powsybl-open-loadflow.version -DnewVersion=${{ env.OLF_MAVEN_PROJECT_VERSION }}
          mvn --file powsybl-dependencies/pom.xml --batch-mode versions:set-property -Dproperty=powsybl-sld.version -DnewVersion=${{ env.SLD_MAVEN_PROJECT_VERSION }}
          mvn --file powsybl-dependencies/pom.xml --batch-mode versions:set-property -Dproperty=powsybl-dynawo.version -DnewVersion=${{ env.DYNAWO_MAVEN_PROJECT_VERSION }}
          mvn --file powsybl-dependencies/pom.xml --batch-mode versions:set-property -Dproperty=powsybl-entsoe.version -DnewVersion=${{ env.ENTSOE_MAVEN_PROJECT_VERSION }}
          mvn --batch-mode -DskipTests=true --file powsybl-dependencies/pom.xml install
          echo "DEP_MAVEN_PROJECT_VERSION=$(mvn help:evaluate --file powsybl-dependencies/pom.xml -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Change PowSyBl dependencies version
        working-directory: ./java
        shell: bash
        run: |
          . /opt/rh/rh-maven33/enable
          mvn versions:set-property -Dproperty=powsybl-dependencies.version -DnewVersion=${{ env.DEP_MAVEN_PROJECT_VERSION }}

      - name: Setup path
        run: echo "/opt/python/${{ matrix.python.name }}-${{ matrix.python.abi }}/bin/" >> $GITHUB_PATH

      - name: Install dependencies
        run: pip3 install -r requirements.txt

      - name: Build wheel
        shell: bash
        run: |
          . /opt/rh/rh-maven33/enable
          python3 setup.py bdist_wheel
          auditwheel repair dist/*.whl

      - name: Install wheel
        run: pip3 install wheelhouse/*.whl --user

      - name: Run tests
        working-directory: ./tests # Run in subdir to use installed lib, not sources
        run: |
          pytest

      - name: Type checking
        run: mypy -p pypowsybl

      - name: Run doc examples
        working-directory: ./docs
        run: make doctest

      - name: Upload wheel
        uses: actions/upload-artifact@v3
        with:
          name: pypowsybl-wheel-linux-${{ matrix.python.name }}
          path: wheelhouse/*.whl

  macos_windows_build:
    name: Build ${{ matrix.config.name }} ${{ matrix.python.name }} wheel
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {
            name: darwin,
            os: macos-11,
          }
          - {
            name: windows,
            os: windows-2019,
          }
        python:
          - {
            name: cp38,
            version: '3.8',
          }

    steps:
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: '22.2.0'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout core sources
        uses: actions/checkout@v3
        with:
          repository: powsybl/powsybl-core
          ref: main
          path: powsybl-core

      - name: Build and install core
        shell: bash
        run: |
          mvn --batch-mode -DskipTests=true --file powsybl-core/pom.xml install
          echo "CORE_MAVEN_PROJECT_VERSION=$(mvn help:evaluate --file powsybl-core/pom.xml -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Checkout olf sources
        uses: actions/checkout@v3
        with:
          repository: powsybl/powsybl-open-loadflow
          ref: main
          path: powsybl-open-loadflow

      - name: Build and install olf
        shell: bash
        run: |
          mvn --batch-mode -DskipTests=true --file powsybl-open-loadflow/pom.xml install
          echo "OLF_MAVEN_PROJECT_VERSION=$(mvn help:evaluate --file powsybl-open-loadflow/pom.xml -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Checkout sld sources
        uses: actions/checkout@v3
        with:
          repository: powsybl/powsybl-single-line-diagram
          ref: main
          path: powsybl-single-line-diagram

      - name: Build and install sld
        shell: bash
        run: |
          mvn --batch-mode -DskipTests=true --file powsybl-single-line-diagram/pom.xml install
          echo "SLD_MAVEN_PROJECT_VERSION=$(mvn help:evaluate --file powsybl-single-line-diagram/pom.xml -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Checkout dynawo sources
        uses: actions/checkout@v3
        with:
          repository: powsybl/powsybl-dynawo
          ref: main
          path: powsybl-dynawo

      - name: Build and install dynawo
        shell: bash
        run: |
          mvn --batch-mode -DskipTests=true --file powsybl-dynawo/pom.xml install
          echo "DYNAWO_MAVEN_PROJECT_VERSION=$(mvn help:evaluate --file powsybl-dynawo/pom.xml -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Checkout entsoe sources
        uses: actions/checkout@v3
        with:
          repository: powsybl/powsybl-entsoe
          ref: main
          path: powsybl-entsoe

      - name: Build and install entsoe
        shell: bash
        run: |
          mvn --batch-mode -DskipTests=true --file powsybl-entsoe/pom.xml install
          echo "ENTSOE_MAVEN_PROJECT_VERSION=$(mvn help:evaluate --file powsybl-entsoe/pom.xml -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Checkout dependencies sources
        uses: actions/checkout@v3
        with:
          repository: powsybl/powsybl-dependencies
          path: powsybl-dependencies

      - name: Build and install dependencies
        shell: bash
        run: |
          mvn --file powsybl-dependencies/pom.xml --batch-mode versions:set-property -Dproperty=powsybl-core.version -DnewVersion=${{ env.CORE_MAVEN_PROJECT_VERSION }}
          mvn --file powsybl-dependencies/pom.xml --batch-mode versions:set-property -Dproperty=powsybl-open-loadflow.version -DnewVersion=${{ env.OLF_MAVEN_PROJECT_VERSION }}
          mvn --file powsybl-dependencies/pom.xml --batch-mode versions:set-property -Dproperty=powsybl-sld.version -DnewVersion=${{ env.SLD_MAVEN_PROJECT_VERSION }}
          mvn --file powsybl-dependencies/pom.xml --batch-mode versions:set-property -Dproperty=powsybl-dynawo.version -DnewVersion=${{ env.DYNAWO_MAVEN_PROJECT_VERSION }}
          mvn --file powsybl-dependencies/pom.xml --batch-mode versions:set-property -Dproperty=powsybl-entsoe.version -DnewVersion=${{ env.ENTSOE_MAVEN_PROJECT_VERSION }}
          mvn --batch-mode -DskipTests=true --file powsybl-dependencies/pom.xml install
          echo "DEP_MAVEN_PROJECT_VERSION=$(mvn help:evaluate --file powsybl-dependencies/pom.xml -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Change PowSyBl dependencies version
        shell: bash
        working-directory: ./java
        run: |
          mvn versions:set-property -Dproperty=powsybl-dependencies.version -DnewVersion=${{ env.DEP_MAVEN_PROJECT_VERSION }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python.version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Build wheel
        env:
          MACOSX_DEPLOYMENT_TARGET: "10.16" # to ensure pip finds wheel when Big Sur is configured to return 10.16 as version instead of 11.0
        run: python setup.py bdist_wheel

      - name: Install wheel
        shell: bash
        run: python -m pip install dist/*.whl --user

      - name: Run tests
        working-directory: ./tests
        run: python3 -m pytest

      - name: Type checking
        run: mypy -p pypowsybl

      - name: Run doc examples
        working-directory: ./docs
        run: make doctest

      - name: Upload wheel
        uses: actions/upload-artifact@v3
        with:
          name: pypowsybl-wheel-${{ matrix.config.name }}-${{ matrix.python.name }}
          path: dist/*.whl
